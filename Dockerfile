# ---------- Base image ----------
    FROM node:20-alpine AS base
    ENV NODE_ENV=production
    WORKDIR /app
    # Optional but common for native deps
    RUN apk add --no-cache libc6-compat
    
    # ---------- Dependencies layer ----------
    FROM base AS deps
    # Use pnpm (via Corepack) and cache installs by lockfile
    COPY package.json pnpm-lock.yaml ./
    RUN corepack enable \
     && corepack prepare pnpm@9 --activate \
     && pnpm install --frozen-lockfile
    
    # ---------- Builder layer ----------
    FROM base AS builder
    ENV NEXT_TELEMETRY_DISABLED=1
    
    # Bring deps and source, then build
    COPY --from=deps /app/node_modules ./node_modules
    COPY . .
    RUN corepack enable && corepack prepare pnpm@9 --activate \
     && pnpm run build
    
    # ---------- Runtime layer ----------
    FROM base AS runner
    ENV NEXT_TELEMETRY_DISABLED=1
    ENV PORT=3000
    EXPOSE 3000
    
    # Copy the minimal standalone server produced by Next
    COPY --from=builder /app/.next/standalone ./
    COPY --from=builder /app/.next/static ./.next/static
    COPY --from=builder /app/public ./public
    
    # Run as non-root
    USER node
    
    # Start the server generated by Next.js standalone output
    CMD ["node", "server.js"]
    